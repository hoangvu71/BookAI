version: '3.8'

services:
  # Open WebUI with OpenRouter Integration
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: bookai-webui
    ports:
      - "3000:8080"
    volumes:
      - open-webui-data:/app/backend/data
    environment:
      # OpenRouter Configuration
      - ENABLE_OPENAI_API=true
      - OPENAI_API_BASE_URL=https://openrouter.ai/api/v1
      - OPENAI_API_KEY=${OPENROUTER_API_KEY}
      
      # Open WebUI Configuration
      - WEBUI_NAME=BookAI
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-your-secret-key-here}
      - ENABLE_SIGNUP=${ENABLE_SIGNUP:-true}
      
      # Database (Open WebUI manages its own SQLite by default)
      # For production, you can configure PostgreSQL here
      
      # Optional features
      - ENABLE_RAG=${ENABLE_RAG:-true}
      - ENABLE_WEB_SEARCH=${ENABLE_WEB_SEARCH:-false}
    restart: unless-stopped

  # Optional: PostgreSQL for Open WebUI (instead of SQLite)
  # Uncomment if you want to use PostgreSQL
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: bookai-postgres
  #   environment:
  #     - POSTGRES_DB=openwebui
  #     - POSTGRES_USER=openwebui
  #     - POSTGRES_PASSWORD=${DB_PASSWORD:-openwebui}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - bookai-network

volumes:
  open-webui-data:
  # postgres-data:  # Uncomment if using PostgreSQL